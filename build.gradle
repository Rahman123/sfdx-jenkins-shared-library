group 'com.claimvantage'
version '0.1-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

sourceSets {
  main {
    groovy {
      srcDirs = ['vars', 'src']
    }
  }

  test {
    groovy {
      srcDirs = ['test']
    }
  }
}

test {
    // delete old test reports
    dependsOn cleanTest

    // don't stop if tests fail
    ignoreFailures = true

    // show full exception
    testLogging.exceptionFormat = 'full'

    // show stdout from tests
    onOutput { dest, event -> print event.message }

    // show test results
    def results = []
    afterTest { desc, result -> println "${desc.className.split("\\.")[-1]}: " + 
        "${desc.name}: ${result.resultType}" }
    afterSuite { desc, result -> if (desc.className) { results << result } }

    // show summary
    doLast {
        println ""
        println "TEST SUMMARY"
        println "Tests: ${results.sum { it.testCount }}" +
            ", Failures: ${results.sum { it.failedTestCount }}" +
            ", Errors: ${results.sum { it.exceptions.size() }}" + 
            ", Skipped: ${results.sum { it.skippedTestCount }}" 
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  maven { url 'http://repo.jenkins-ci.org/releases/' }
  mavenCentral()
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.4.8'
  testCompile group: 'junit', name: 'junit', version: '4.12'
  compile 'org.jenkins-ci.main:jenkins-core:2.23'

  // Jenkins plugins
  compile group: 'org.jenkins-ci.plugins', name: 'credentials', version: '2.1.13', ext: 'jar'
  compile group: 'org.jenkins-ci.plugins', name: 'credentials-binding', version: '1.13', ext: 'jar'
  compile group: 'org.apache.maven', name: 'maven-model', version: '3.3.9'

  testCompile group: 'com.lesfurets', name: 'jenkins-pipeline-unit', version: '1.1'
  testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'

  // TRICKY: The lib folder contains all other plugins *JAR* files
  // if not found in Maven
  compile fileTree(dir: 'lib', include: ['*.jar'])
}
